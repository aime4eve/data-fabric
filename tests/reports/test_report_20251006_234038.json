{
  "test_execution_summary": {
    "start_time": "2025-10-06T23:40:38.030095",
    "end_time": "2025-10-06T23:40:38.066868",
    "total_duration_seconds": 0.036773,
    "total_test_cases": 1,
    "passed": 0,
    "failed": 1,
    "skipped": 0,
    "errors": 0,
    "success_rate": 0.0
  },
  "test_cases": [
    {
      "test_id": "test_document_upload::TestDocumentUpload::test_upload_empty_file",
      "description": "测试上传空文件",
      "module": "test_document_upload",
      "class": "TestDocumentUpload",
      "function": "test_upload_empty_file",
      "markers": [],
      "start_time": "2025-10-06T23:40:38.030504",
      "end_time": "2025-10-06T23:40:38.066550",
      "duration": 0.03602910041809082,
      "status": "failed",
      "error_message": "self = <test_document_upload.TestDocumentUpload object at 0x7616a21d5670>\n\n    def test_upload_empty_file(self):\n        \"\"\"测试上传空文件\"\"\"\n        with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False) as f:\n            # 创建空文件\n            temp_file_path = f.name\n    \n        try:\n            with open(temp_file_path, 'rb') as f:\n                files = {'file': ('empty.txt', f, 'text/plain')}\n                data = {\n                    'title': '空文件测试',\n                    'description': '测试空文件上传',\n                    'category_id': 'test_category'\n                }\n    \n                response = requests.post(self.UPLOAD_ENDPOINT, files=files, data=data)\n    \n                # 空文件应该被拒绝\n>               assert response.status_code == 400\nE               assert 201 == 400\nE                +  where 201 = <Response [201]>.status_code\n\n../../tests/e2e/test_document_upload.py:202: AssertionError",
      "steps": [],
      "input_data": {},
      "expected_result": "测试应该通过",
      "actual_result": "测试失败: self = <test_document_upload.TestDocumentUpload object at 0x7616a21d5670>\n\n    def test_upload_empty_file(self):\n        \"\"\"测试上传空文件\"\"\"\n        with tempfile.NamedTemporaryFile(mode='w', suffix='.txt', delete=False) as f:\n            # 创建空文件\n            temp_file_path = f.name\n    \n        try:\n            with open(temp_file_path, 'rb') as f:\n                files = {'file': ('empty.txt', f, 'text/plain')}\n                data = {\n                    'title': '空文件测试',\n                    'description': '测试空文件上传',\n                    'category_id': 'test_category'\n                }\n    \n                response = requests.post(self.UPLOAD_ENDPOINT, files=files, data=data)\n    \n                # 空文件应该被拒绝\n>               assert response.status_code == 400\nE               assert 201 == 400\nE                +  where 201 = <Response [201]>.status_code\n\n../../tests/e2e/test_document_upload.py:202: AssertionError"
    }
  ],
  "environment_info": {
    "python_version": "3.12.3 (main, Aug 14 2025, 17:47:21) [GCC 13.3.0]",
    "pytest_version": "7.4.4",
    "operating_system": "posix",
    "frontend_url": "http://localhost:3000",
    "backend_url": "http://localhost:5000"
  },
  "compliance_info": {
    "security_standards": "符合政府安全标准要求",
    "automation_framework": "适用于自动化测试框架",
    "manual_intervention": "最小化人工干预"
  }
}