[tool:pytest]
# Pytest configuration file

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add options
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=api
    --cov-report=html:reports/coverage
    --cov-report=term-missing
    --cov-report=xml:reports/coverage.xml
    --html=reports/pytest_report.html
    --self-contained-html
    --junitxml=reports/junit.xml

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    api: API tests
    frontend: Frontend tests
    backend: Backend tests
    auth: Authentication tests
    search: Search functionality tests
    document: Document management tests
    file: File handling tests
    database: Database tests
    cache: Cache tests
    security: Security tests

# Test timeout (in seconds)
timeout = 300

# Ignore warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = api
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */config/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = reports/coverage

[coverage:xml]
output = reports/coverage.xml